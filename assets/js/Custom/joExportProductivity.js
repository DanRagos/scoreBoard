const exportProductivity = ({ data, devName, jobName }) => {
    console.log('exportProductivity');
    const transformedData = trasformProductivityData({ data });
    console.log(devName);
    console.log(jobName);

    const wb = XLSX.utils.book_new();

    wb.Props = {
        Title: 'Productivity Records',
        Author: 'Generated by Gemba Web',
        CreatedDate: new Date(),
    };

    var modified_job_name = jobName.replaceAll('/', '_');

    wb.SheetNames.push(`${modified_job_name || 'No Job'}`);
    const ws = XLSX.utils.json_to_sheet(transformedData);
    const wscols = [
        {wch: 20},
        {wch: 15},
        {wch: 8},
        {wch: 8},
        {wch: 20},
    ]
    ws['!cols'] = wscols;

    wb.Sheets[`${modified_job_name || 'No Job'}`] = ws;

    const productivitylbl = lang[flags.pref.lang].productivity.pagetitle;

    XLSX.writeFile(wb, `${productivitylbl}_Records_${jobName || 'No_Job'}.xlsx`, {
        bookType: 'xlsx',
    });
};

const trasformProductivityData = ({ data }) => {
    let starttimelbl = lang[flags.pref.lang].productivity.columns[0]; 
    let goodqtylbl = lang[flags.pref.lang].productivity.columns[1];
    let cntalbl = lang[flags.pref.lang].productivity.columns[2];
    let cntblbl = lang[flags.pref.lang].productivity.columns[3];
    let timeperpiecelbl = lang[flags.pref.lang].productivity.columns[4];

    if (flags.pref.lang === 'en') {
        starttimelbl = starttimelbl.toUpperCase();
        goodqtylbl = goodqtylbl.toUpperCase();
        cntalbl = cntalbl.toUpperCase();
        cntblbl = cntblbl.toUpperCase();
        timeperpiecelbl = timeperpiecelbl.toUpperCase();
    }
    const newDataArray = [];
    if (data[0] !== undefined) {
        data.forEach((d) => {
            const newData = {};

            newData[`${starttimelbl}`] = d.extraStart;
            newData[`${goodqtylbl}`] = d.extraGoodQty.toFixed(2);
            newData[`${cntalbl}`] =  d.extraCntA.toFixed(2);
            newData[`${cntblbl}`] = d.extraCntB.toFixed(2);
            newData[`${timeperpiecelbl}`] = d.extraCycleTime.toFixed(2);

            newDataArray.push(newData);
        });

        return newDataArray;
    } else {
        const newData = {};
        newData[`${starttimelbl}`] = '';
        newData[`${goodqtylbl}`] = '';
        newData[`${cntalbl}`] =  '';
        newData[`${cntblbl}`] = '';
        newData[`${timeperpiecelbl}`] = '';
        return [newData];
    }
};
